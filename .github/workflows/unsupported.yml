name: Unsupported Ruby Unit Tests

on:
  push:
    branches:
      - 'main'
      - 'master'
      - '*-maintenance'
      - '*-dev'
      - '*-stable'
    tags:
      - '!*' # Do not execute on tags
  pull_request:
    branches:
      - '*'
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Specs - Ruby ${{ matrix.ruby }} ${{matrix.gemfile}} ${{ matrix.name_extra || '' }}
    env: # $BUNDLE_GEMFILE must be set at the job level, so it is set for all steps
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile
    if: "!contains(github.event.commits[0].message, '[ci skip]') && !contains(github.event.commits[0].message, '[skip ci]')"
    strategy:
      fail-fast: false
      matrix:
        gemfile:
          - f0
          - f1
          - f2
        rubygems:
          - latest
        bundler:
          - latest
        ruby:
          - "1.9"
          - "2.0"
          - "2.1"
          - "2.2"
          - "2.3"
          - "2.4"
          - "2.5"
          - "2.6"
          - ruby-head
        experimental: [false]
        exclude:
          - ruby: ["1.9", "2.0", "2.1", "2.2", "2.3"]
            gemfile: ["F1", "F2"]
          - ruby: ["2.4", "2.5"]
            gemfile: ["F2"]
        include:
          # Includes a new variable experimental with a value of true
          #   for the matrix legs matching rubygems: latest, which is all of them.
          # This is the "unsupported" build matrix, so only many builds are experimental here.
          # Even so, we do want to "support" some of the EOL rubies in the 1.4.x series on a marginal basis.
          - ruby: ruby-head
            experimental: true
          - ruby: "2.1"
            experimental: true
          - ruby: "2.2"
            experimental: true

    runs-on: ubuntu-20.04
    continue-on-error: ${{ matrix.experimental || endsWith(matrix.ruby, 'head') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install cURL Headers
        run: sudo apt-get install libcurl4-openssl-dev
      - name: Setup Ruby & Bundle
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          rubygems: ${{ matrix.rubygems }}
          bundler: ${{ matrix.bundler }}
          bundler-cache: true
      - name: Run tests
        run: bundle exec rake test
